---
- name: Template Translator configuration file
  template:
    src: ./templates/translator/config.json.j2
    dest: ./configs/config.translator.json

- name: Build Translator docker image
  shell: docker build -t '{{ translator.image }}' templates/translator --progress=plain >> '{{ logs_dir }}'/build.log 2>&1

- name: Get Translator container info
  docker_container_info:
    name: '{{ translator.name }}'
  register: translator_info
  ignore_errors: true

- name: Print information about container
  debug:
    var: translator_info.container
  when: translator_info.exists

- name: Wait Elasticsearch up
  shell: curl -fsSL '{{ es_endpoint }}/_cluster/health' | grep -q '"status":"green"'
  register: es_health
  retries: 10
  delay: 30
  until: es_health.rc == 0

- name: Start Translator container
  docker_container:
    name: '{{ translator.name }}'
    image: '{{ translator.image }}'
    network_mode: host
    state: started
    restart_policy: always
    volumes:
      - ./configs/config.translator.json:/root/config.json

    mounts:
      - source: '{{ logs_dir }}'
        target: /root/logs
        type: bind

    command: >
      /bin/bash -c "\
        node build/main.js \
          --config=/root/config.json \
        >> /root/logs/{{ translator.log_file }} 2>&1"

    healthcheck:
      test: ['CMD-SHELL', 'tail -n 3 /root/logs/{{ translator.log_file }} | grep -q "drained" || exit 1']
      interval: 5s
      retries: 6
      start_period: 10s
      timeout: 10s

  when: not translator_info.exists or translator_info.container.State.Running == false or translator_info.container.State.Health.Status != 'healthy'
