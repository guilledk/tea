---
- name: Template RPC configuration file
  template:
    src: ./templates/rpc/config.json.j2
    dest: ./configs/config.rpc.json

- name: Build RPC docker image
  shell: docker build -t '{{ rpc.image }}' templates/rpc --progress=plain >> '{{ logs_dir }}'/build.log 2>&1

- name: Get RPC container info
  docker_container_info:
    name: '{{ rpc.name }}'
  register: rpc_info
  ignore_errors: true

    # - name: Print information about container
    #   debug:
    #     var: rpc_info.container
    #   when: rpc_info.exists

- name: Start RPC container
  docker_container:
    name: '{{ rpc.name }}'
    image: '{{ rpc.image }}'
    network_mode: host
    state: started
    restart_policy: always
    volumes:
      - ./configs/config.rpc.json:/root/config.json

    mounts:
      - source: '{{ logs_dir }}'
        target: /root/logs
        type: bind

    command: >
      /bin/bash -c "\
        node /telos-evm-rpc/dist/main.js \
          --config=/root/config.json \
        >> /root/logs/{{ rpc.log_file }} 2>&1"

    healthcheck:
      test: ['CMD-SHELL', 'curl -s -X POST --data {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1} -H "Content-Type: application/json" http://127.0.0.1:{{ rpc.port }}/evm | grep -Eo "\"result\":\"0x[0-9a-fA-F]+\"" || exit 1']
      interval: 5s
      retries: 8
      start_period: 30s
      timeout: 10s

  when: not rpc_info.exists or (rpc_info.container.State.Running == false) or (rpc_info.container.State.Health.Status != 'healthy')
