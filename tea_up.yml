---
- name: Telos EVM Node
  hosts: localhost
  become: yes

  environment:
    PATH: "{{ lookup('env', 'VIRTUAL_ENV') }}/bin:{{ lookup('env', 'PATH') }}"
    PYTHONPATH: "{{ lookup('env', 'PYTHONPATH') }}"

  vars_files:
    - config.yml

  tasks:
    - name: Check leap data directory existence
      stat:
        path: '{{ data_dir }}/leap/blocks/blocks.log'
      register: leap_data_dir

    - name: Generate dynamic vars
      set_fact:
          is_leap_relaunch: '{{ leap_data_dir.stat.exists }}'

          leap_log_file: '{{ logs_dir }}/{{ leap.log_file }}'
          leap_http_addr: '{{ leap.ini.http_host }}:{{ leap.ini.http_port }}'
          leap_http_endpoint: 'http://127.0.0.1:{{ leap.ini.http_port }}'
          leap_ship_addr: '{{ leap.ini.ship_host }}:{{ leap.ini.ship_port }}'
          leap_ship_endpoint: 'ws://127.0.0.1:{{ leap.ini.ship_port }}'
          leap_p2p_addr: '{{ leap.ini.p2p_host }}:{{ leap.ini.p2p_port }}'
          leap_remote_endpoint: >-
            {%- if node_type == 'local' -%}
            http://127.0.0.1:{{ leap.ini.http_port }}
            {%- elif node_type == 'mainnet' -%}
            http://mainnet.telos.net
            {%- elif node_type == 'testnet' -%}
            http://testnet.telos.net
            {%- else -%}
            undefined
            {%- endif -%}
          leap_snapshot: >-
            {%- if leap.snapshot is defined -%}
            {{ leap.snapshot }}
            {%- else -%}
            undefined
            {%- endif -%}

          reth_rpc_endpoint: 'http://127.0.0.1:{{ reth.rpc_port }}'
          reth_exec_endpoint: 'http://127.0.0.1:{{ reth.auth_rpc_port }}'

    - name: Gather required snapshot
      leap_snap:
        download_dir: '{{ data_dir }}/leap/snapshots'
        block_num: '{{ leap.snapshot }}'
        network: '{{ node_type }}'

      when: not is_leap_relaunch and not node_type == 'local' and leap.snapshot is defined and (leap.snapshot == 'latest' or leap.snapshot|int != 0)
      register: snapshot_info

    - name: Maybe setup snapshot config
      set_fact:
          leap_snapshot: '/root/data/snapshots/{{ snapshot_info.result.snap_path }}'
          translator_start_block: '{{ snapshot_info.result.block_num|int + 1 }}'

      when: snapshot_info is not skipped

    - name: Create configs directory
      file:
        path: configs
        state: directory

    - name: Ensure data directory exists
      file:
        path: '{{ item }}'
        state: directory
      with_items:
        - '{{ data_dir }}'
        - '{{ data_dir }}/leap'
        - '{{ data_dir }}/reth'
        - '{{ data_dir }}/tcc'
        - '{{ logs_dir }}'

#    - name: Check if Docker is installed
#      command: docker --version
#      register: docker_installed
#      ignore_errors: yes
#
#    - name: Install Docker
#      apt:
#        name: docker.io
#        state: present
#        update_cache: yes
#      when: docker_installed.rc != 0

    - name: Ensure leap service is up
      include_tasks: playbooks/start_leap.yml

    - name: Ensure reth service is up
      include_tasks: playbooks/start_reth.yml

    - name: Get reth JWT secret
      set_fact:
        reth_jwt_secret: '{{ reth_cat_jwt.stdout }}'

    - name: Ensure tcc service is up
      include_tasks: playbooks/start_tcc.yml
